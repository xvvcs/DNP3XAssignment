@page "/login"
@using Blazor.Services
@inject AuthenticationStateProvider Auth
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="login-container">
            <div class="login-card">
                <h3 class="text-center my-4">Login</h3>
                <EditForm Model="loginModel" OnValidSubmit="LoginAsync" Context="editContext">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />

                    <div class="mb-3">
                        <label class="form-label">Username:</label>
                        <InputText @bind-Value="loginModel.Username" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password:</label>
                        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Login</button>
                </EditForm>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-3">@errorMessage</div>
                }
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="alert alert-info mt-3">You are already logged in.</div>
    </Authorized>
</AuthorizeView>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = "";

    private async Task LoginAsync()
    {
        try
        {
            await ((AuthProvider)Auth).Login(loginModel.Username, loginModel.Password);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            errorMessage = ex.Message;
        }
    }

    public class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}